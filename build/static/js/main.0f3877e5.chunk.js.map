{"version":3,"sources":["styled-components/colors.js","components/account.tsx","components/header.tsx","components/main.tsx","components/components_form/input.tsx","components/components_form/warningBlock.tsx","components/form.tsx","App/app.tsx","index.tsx"],"names":["colors","warnBlock","StyledAccount","styled","div","c","StyledAccText","StyledAccBtn","button","Account","props","login","to","StyledHeader","header","StyledLogo","Header","StyledWrap","StyledBtn","Main","StyledField","label","StyledLabel","span","StyledInput","input","StyledError","Input","React","forwardRef","ref","name","errors","registerName","aria-invalid","render","messages","Object","entries","map","type","message","w","StyledPoint","StyledText","WarningBlock","text","a","url","fetch","method","headers","response","json","StyledFormWrap","form","StyledSbmt","StyledCheckbox","StyledCheckHide","StyledCheckText","Form","useState","setLogin","password","setPassword","rememberMe","setRememberMe","noUser","setNoUser","wrongPassword","setWrongPassword","disBtnLogin","setDisBtn","redirect","setRedirect","useEffect","localStorage","getItem","savedPassword","useForm","criteriaMode","mode","reValidateMode","register","formState","handleSubmit","reset","onSubmit","param","setItem","setTimeout","getData","then","data","i","length","getLogin","required","pattern","value","onChange","e","target","minLength","maxLength","className","checked","disabled","StyledWrapper","App","exact","path","component","Global","createGlobalStyle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0f3877e5.chunk.js","sourcesContent":["export const colors = {\r\n\twhite: \"#ffffff\",\r\n\tblueBtn: \"#4A67FF\",\r\n\tblack: \"#000\",\r\n\tgreyBtn: \"#F5F5F5\",\r\n\tgrey: \"#F5F5F5\",\r\n\tcheckbox: \"#E26F6F\",\r\n\tdisableBlueBtn: \"#99A9FF\",\r\n\tcheckboxTrue: \"#4A67FF\",\r\n}\r\n\r\nexport const warnBlock = {\r\n\tlightRed: \"#F5E9E9\",\r\n\tbgPoint: \"#FFC8C8\",\r\n\tborder: \"#E26F6F\",\r\n\tpoint: \" #EE6565\"\r\n}\r\n","import React, {FC} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\nimport {colors as c} from \"../styled-components/colors\";\r\n\r\ninterface AddProp {\r\n\tlogin?: string;\r\n  }\r\n\r\nconst Account:FC<AddProp> = (props) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StyledAccount>\r\n\t\t\t\t<StyledAccText>Здравствуйте,{props.login}</StyledAccText>\r\n\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t<StyledAccBtn>Выйти</StyledAccBtn>\r\n\t\t\t\t</Link>\r\n\t\t\t</StyledAccount>\r\n\t</>\r\n\t)\r\n}\r\n\r\nconst StyledAccount = styled.div`\r\n\ttext-align: center;\r\n\tcolor: ${c.black};\r\n`\r\n\r\nconst StyledAccText = styled.div`\r\n\tfont-size: 40px;\r\n\tline-height: 48px;\r\n\tmargin-bottom: 50px;\r\n`\r\n\r\nconst StyledAccBtn = styled.button`\r\n\tbackground: ${c.greyBtn};\r\n\tborder-radius: 8px;\r\n\ttext-align: center;\r\n\tpadding: 19px 70px;\r\n\tfont-size: 18px;\r\n\tline-height: 22px;\r\n\tborder: none;\r\n\tcursor: pointer;\r\n`\r\n\r\nexport default Account;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {colors as c} from \"../styled-components/colors\";\r\n\r\nconst StyledHeader = styled.header`\r\n    margin-bottom: 10vh;\r\n`\r\n\r\nconst StyledLogo = styled.div`\r\n    font-weight: bold;\r\n    font-size: 64px;\r\n    line-height: 78px;\r\n    color: ${c.black};\r\n    text-align: center;\r\n    padding: 40px 0;\r\n`\r\n\r\nconst Header = () => {\r\n    return (\r\n        <StyledHeader>\r\n            <StyledLogo>ONLY.</StyledLogo>\r\n        </StyledHeader>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\nimport {colors as c} from \"../styled-components/colors\";\r\n\r\nconst Main = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StyledWrap>\r\n\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t<StyledBtn>Авторизоваться</StyledBtn>\r\n\t\t\t\t</Link>\r\n\t\t\t</StyledWrap>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst StyledWrap = styled.div`\r\n\twidth: 100%;\r\n\ttext-align: center\r\n`\r\n\r\nconst StyledBtn = styled.button`\r\n\tmax-width: 250px;\r\n\twidth: 100%;\r\n\tpadding: 10px;\r\n\ttext-align: center;\r\n\tmargin: 0 auto;\r\n\tbackground: ${c.blueBtn};\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    color: ${c.white};\r\n    cursor: pointer;\r\n\tborder: none;\r\n\tdisplay: inline-block;\r\n`\r\nexport default Main","import React, {ChangeEventHandler} from 'react';\r\nimport { ErrorMessage } from '@hookform/error-message';\r\nimport styled from 'styled-components';\r\nimport { colors as c } from \"../../styled-components/colors\";\r\n\r\nconst StyledField = styled.label`\r\n\tmargin-bottom: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`\r\n\r\nconst StyledLabel = styled.span`\r\n\tfont-size: 16px;\r\n\tline-height: 19px;\r\n\tcolor: ${c.black};\r\n\tmargin-bottom: 10px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n\tbackground: ${c.grey};\r\n\tborder-radius: 8px;\r\n\theight: 60px;\r\n\theight: 100%;\r\n\tpadding: 20px;\r\n\tfont-size: 16px;\r\n\tline-height: 19px;\r\n\tcolor: ${c.black};\r\n\tborder: none;\r\n\r\n\t&[aria-invalid='true'] {\r\n\t\tborder: 1px solid ${c.checkbox};\r\n\t}\r\n`\r\nconst StyledError = styled.div`\r\n\tfont-size: 14px;\r\n\tline-height: 17px;\r\n\tcolor: #E26F6F;\r\n\tmargin-top: 8px;\r\n`\r\n\r\ninterface AddProp {\r\n\tlabel: string;\r\n\tname: string;\r\n\terrors: any;\r\n\tregisterName: string;\r\n\ttype?: string;\r\n\tvalue?: string;\r\n\tonChange: ChangeEventHandler;\r\n  }\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, AddProp>(({ label, name, errors, registerName, ...props }, ref) => {\r\n\treturn (<>\r\n\t\t<StyledField>\r\n\t\t\t<StyledLabel>{label}</StyledLabel>\r\n\t\t\t<StyledInput\r\n\t\t\t\tref={ref}\r\n\t\t\t\tname={name}\r\n\t\t\t\t{...props}\r\n\t\t\t\taria-invalid={registerName ? \"true\" : \"false\"}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t<ErrorMessage errors={errors} name={name}\r\n\t\t\t\trender={({ messages }) =>\r\n\t\t\t\t\tmessages &&\r\n\t\t\t\t\tObject.entries(messages).map(([type, message]) => (\r\n\t\t\t\t\t\t<StyledError key={type}>{message}</StyledError>\r\n\t\t\t\t\t)\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</StyledField>\r\n\t</>\r\n\t)\r\n}\r\n);\r\n\r\nexport default Input","import React, {FC} from 'react';\r\nimport styled from 'styled-components';\r\nimport { colors as c, warnBlock as w} from \"../../styled-components/colors\";\r\n\r\nconst StyledWrap = styled.div`\r\n\tbackground: ${w.lightRed};\r\n\tborder: 1px solid ${w.border};\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 8px;\r\n\tfont-size: 14px;\r\n\tline-height: 17px;\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tposition: absolute;\r\n\ttop: -75px;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n`\r\n\r\nconst StyledPoint = styled.div`\r\n\twidth: 20px;\r\n\theight: 20px;\r\n\tdisplay: inline-flex;\r\n\tbackground: ${w.bgPoint};\r\n\tcolor: ${w.point};\r\n\tborder-radius: 50%;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tmargin-right: 14px;\r\n\r\n`\r\nconst StyledText = styled.div`\r\n\tcolor: ${c.black};\r\n`\r\n\r\nconst WarningBlock:FC<{text:string}> = ({text}) => {\r\n\treturn (\r\n\t\t<StyledWrap>\r\n\t\t\t<StyledPoint>!</StyledPoint>\r\n\t\t\t<StyledText>{text}</StyledText>\r\n\t\t</StyledWrap>\r\n\t)\r\n};\r\n\r\nexport default WarningBlock","import React, { useEffect, FC } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"./components_form/input\";\r\nimport WarningBlock from \"./components_form/warningBlock\";\r\nimport styled from 'styled-components';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { colors as c} from \"../styled-components/colors\";\r\n\r\ninterface AddProp {\r\n\tgetLogin: Function;\r\n}\r\n\r\ntype FormData = {\r\n\tlogin: any,\r\n\tpassword: any,\r\n};\r\n\r\nconst Form:FC<AddProp> = (props) => {\r\n\tconst [login, setLogin] = React.useState<string>('');\r\n\tconst [password, setPassword] = React.useState<any>('');\r\n\tconst [rememberMe, setRememberMe] = React.useState<any>(false);\r\n\tconst [noUser, setNoUser] = React.useState<boolean>(false);\r\n\tconst [wrongPassword, setWrongPassword] = React.useState<boolean>(false);\r\n\r\n\t//т.к. мне не удалось корректно подписаться на события isSubmitting, isSubmitSuccessful,\r\n\t//a isSubmitted срабатывало не всегда, то установила свои state для отключения кнопки отправки формы\r\n\t//и перехода на страницу личного кабинета\r\n\tconst [disBtnLogin, setDisBtn] = React.useState<boolean>(false);\r\n\tconst [redirect, setRedirect] = React.useState<boolean>(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst rememberMe = localStorage.getItem('rememberMe');\r\n\t\tconst savedPassword = rememberMe ? localStorage.getItem('password') : '';\r\n\t\tsetPassword(savedPassword);\r\n\t\t(rememberMe === null || rememberMe === 'false') ? setRememberMe(false) : setRememberMe(true);\r\n\t}, []);\r\n\r\n\tconst { register, formState: { errors }, handleSubmit, reset } = useForm<FormData>({\r\n\t\tcriteriaMode: \"all\",\r\n\t\tmode: 'onSubmit',\r\n\t\treValidateMode: 'onBlur',\r\n\t});\r\n\r\n\tconst onSubmit = (param:FormData) => {\r\n\t\tlocalStorage.setItem('rememberMe', rememberMe);\r\n\t\tlocalStorage.setItem('password', rememberMe ? password : '');\r\n\t\tsetDisBtn(true);\r\n\r\n\t\tsetTimeout(() => { //задержка, чтобы были видно disable кнопки\r\n\t\t\tgetData('http://localhost:8000/users')\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\t\t\tif (data[i].login === login && data[i].password === password) {\r\n\t\t\t\t\t\t\tsetRedirect(true);\r\n\t\t\t\t\t\t\treset();\r\n\t\t\t\t\t\t\tsetDisBtn(!redirect);\r\n\t\t\t\t\t\t\tprops.getLogin(login);\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (data[i].login === login && data[i].password !== password) {\r\n\t\t\t\t\t\t\tsetWrongPassword(true);\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetNoUser(true);\r\n\t\t\t\t})\r\n\t\t}, 800)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t<StyledFormWrap onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t{noUser ? <WarningBlock text={`Пользователя ${login} не существует`} /> : ''}\r\n\t\t\t\t{wrongPassword ? <WarningBlock text=\"Неверный пароль\" /> : ''}\r\n\t\t\t\t<Input\r\n\t\t\t\t\t{...register(\"login\", {\r\n\t\t\t\t\t\trequired: 'Обязательное поле',\r\n\t\t\t\t\t\tpattern: {\r\n\t\t\t\t\t\t\tvalue: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\r\n\t\t\t\t\t\t\tmessage: \"Проверьте корректность email адреса\",\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tname=\"login\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tlabel=\"Логин\"\r\n\t\t\t\t\terrors={errors}\r\n\t\t\t\t\tregisterName={errors.login}\r\n\t\t\t\t\tvalue={login}\r\n\t\t\t\t\tonChange={(e:React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\tsetLogin(e.target.value);\r\n\t\t\t\t\t\tsetNoUser(false);\r\n\t\t\t\t\t\tsetDisBtn(false);\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<Input\r\n\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\trequired: 'Обязательное поле',\r\n\t\t\t\t\t\tminLength: {\r\n\t\t\t\t\t\t\tvalue: 8,\r\n\t\t\t\t\t\t\tmessage: \"Пароль должен быть не менее 7 символов\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tmaxLength: {\r\n\t\t\t\t\t\t\tvalue: 18,\r\n\t\t\t\t\t\t\tmessage: \"Пароль должен быть не более 18 символов\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tlabel=\"Пароль\"\r\n\t\t\t\t\terrors={errors}\r\n\t\t\t\t\tregisterName={errors.password}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e:React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\tsetPassword(e.target.value);\r\n\t\t\t\t\t\tsetWrongPassword(false);\r\n\t\t\t\t\t\tsetDisBtn(false);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<StyledLabel>\r\n\t\t\t\t\t<StyledCheckHide\r\n\t\t\t\t\t\tclassName='form__check-rememb_hide'\r\n\t\t\t\t\t\tname=\"rememberMe\"\r\n\t\t\t\t\t\tchecked={rememberMe}\r\n\t\t\t\t\t\tonChange={() => { rememberMe ? setRememberMe(false) : setRememberMe(true) }}\r\n\t\t\t\t\t\ttype=\"checkbox\" />\r\n\t\t\t\t\t<StyledCheckbox></StyledCheckbox>\r\n\t\t\t\t\t<StyledCheckText>Запомнить пароль</StyledCheckText>\r\n\t\t\t\t</StyledLabel>\r\n\t\t\t\t\r\n\t\t\t\t<StyledSbmt type=\"submit\" disabled={disBtnLogin}>Войти</StyledSbmt>\r\n\t\t\t\t\r\n\t\t\t\t{redirect ? <Redirect to=\"/profile\" /> : ''}\r\n\t\t\t</StyledFormWrap>\r\n\t</>\r\n\t)\r\n}\r\n\r\nasync function getData(url = '') {\r\n\tconst response = await fetch(url, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t});\r\n\treturn await response.json()\r\n}\r\n\r\n\r\nconst StyledFormWrap = styled.form`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmax-width: 640px;\r\n\tmargin: 0 auto;\r\n\tposition: relative;\r\n`\r\n\r\nconst StyledSbmt = styled.button`\r\n\theight: 60px;\r\n\tbackground: ${c.blueBtn};\r\n\tborder-radius: 8px;\r\n\twidth: 100%;\r\n\tfont-weight: bold;\r\n\tfont-size: 18px;\r\n\tline-height: 22px;\r\n\tcolor: ${c.white};\r\n\tcursor: pointer;\r\n\tborder: none;\r\n\r\n\t&:disabled {\r\n\t\tbackground: ${c.disableBlueBtn};\r\n\t}\r\n`\r\n\r\nconst StyledLabel = styled.label`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 30px;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n`\r\n\r\nconst StyledCheckbox = styled.span`\r\n\twidth: 20px;\r\n\theight: 20px;\r\n\tmargin-right: 14px;\r\n\tdisplay: block;\r\n\tline-height: 21px;\r\n\tposition: relative;\r\n\tborder: 1px solid ${c.black};\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 4px;\r\n\r\n\t&::after {\r\n\t\tposition: absolute;\r\n\t\tcontent: \"\";\r\n\t\twidth: 14px;\r\n\t\theight: 14px;\r\n\t\ttop: 2px;\r\n\t\tleft: 2px;\r\n\t\ttransition: all 0.1s linear 0s;\r\n\t\tborder-radius: 2px;\r\n\t}\r\n`\r\n\r\nconst StyledCheckHide = styled.input`\r\n\tdisplay: none;\r\n\t\t\t\t\r\n\t&:checked~${StyledCheckbox}::after {\r\n\t\tbackground:${c.checkboxTrue};\r\n\t}\r\n`\r\n\r\nconst StyledCheckText = styled.span`\r\n\tfont-size: 16px;\r\n\tline-height: 19px;\r\n\tcolor: #000;\r\n`\r\n\r\nexport default Form;","import React from 'react';\r\nimport Account from \"../components/account\";\r\nimport Header from '../components/header';\r\nimport Main from '../components/main';\r\nimport Form from \"../components/form\";\r\nimport styled from 'styled-components';\r\nimport {BrowserRouter as Router,\r\n\t\tSwitch,\r\n\t\tRoute\r\n  } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n\tconst [login, setLogin] = React.useState<string>('');\r\n\tconst getLogin = (value:\"string\") => {\r\n\t\tsetLogin(value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Router>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<StyledWrapper>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Main}/>\r\n\t\t\t\t\t\t<Route exact path=\"/login\">\r\n\t\t\t\t\t\t\t<Form getLogin={getLogin}/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/profile\">\r\n\t\t\t\t\t\t\t<Account login={login}/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</StyledWrapper>\r\n\t\t\t</Router>\r\n\t</>\r\n\t)\r\n}\r\n\r\nconst StyledWrapper = styled.div`\r\n\tmax-width: 1200px;\r\n\tmargin: 0 auto;\r\n\tpadding: 0 40px;\r\n`\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App/app\";\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nconst Global = createGlobalStyle`\r\n    body {\r\n        position: relative;\r\n        height: 100vh;\r\n        padding: 0;\r\n        margin: 0;\r\n        overflow: hidden;\r\n        font-weight: 400;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, ul, li {\r\n        font-size: inherit;\r\n        font-weight: inherit;\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: Arial, sans-serif;\r\n        font-weight: normal;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n    }\r\n\r\n    input:focus, textarea:focus {\r\n        outline: none;\r\n    }\r\n\r\n    .main {\r\n        font-size: 18px;\r\n        font-weight: 400;\r\n        text-align: left;\r\n    }\r\n`\r\n\r\nReactDOM.render(\r\n    <>\r\n        <Global/>\r\n        <App />\r\n    </>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}